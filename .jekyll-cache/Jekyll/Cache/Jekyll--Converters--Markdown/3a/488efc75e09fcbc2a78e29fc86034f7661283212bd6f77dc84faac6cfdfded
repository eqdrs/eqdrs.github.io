I"¸D<p>Ol√°, pessoal! Neste post, irei trazer uma pequena experi√™ncia usando a Tensorflow Object Detection API. Trata-se de uma aplica√ß√£o em Python para detec√ß√£o de objetos em tempo real, que utiliza esta API como backend. √â necess√°rio ter uma webcam no seu computador para executar o projeto.</p>

<p>A <a href="https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/">TensorFlow Object Detection API</a> √© uma estrutura de c√≥digo aberto constru√≠da sobre o TensorFlow, que facilita a constru√ß√£o, treinamento e implanta√ß√£o de modelos de detec√ß√£o de objetos.</p>

<p>Para a aplica√ß√£o, usaremos um modelo pr√©-treinado oferecido pela API, o <strong>SSD MobileNet v1 (COCO)</strong>, que possui velocidade r√°pida (30 ms) e um √≠ndice de precis√£o de 21%.</p>

<h5 id="ssd--single-shot-multibox-detector">SSD ‚Äì Single Shot MultiBox Detector</h5>
<p></p>

<p>O Single Shot MultiBox Detector √© um m√©todo para detec√ß√£o objetos em imagens que usa uma √∫nica rede neural profunda. Ele difere de outros detectores de single shot devido ao uso de m√∫ltiplas camadas que proporcionam uma precis√£o mais fina em objetos com diferentes escalas (cada camada mais profunda ver√° objetos maiores). Aqui voc√™ encontra o paper original: <a href="https://arxiv.org/pdf/1512.02325.pdf">https://arxiv.org/pdf/1512.02325.pdf</a>.</p>

<p>O SSD normalmente come√ßa com um modelo pr√©-treinado que √© convertido em uma rede neural totalmente convolutiva. Em seguida, s√£o anexadas algumas camadas de convolu√ß√£o extras, que ajudar√£o a detectar objetos maiores na imagem.</p>

<p>O termo ‚ÄúMultibox‚Äù se refere √† etapa anterior ao Single Shot Detector, dentro da arquitetura do SSD. Ele divide a imagem em diversos segmentos, e desenha caixas delimitadoras em torno de cada um desses segmentos. Feito isso, o algoritmo verifica onde existe um objeto a ser detectado dentro dessas caixas (durante o processo de constru√ß√£o do modelo, n√≥s informamos quais s√£o as poss√≠veis classes a serem detectadas).</p>

<p><img src="/assets/images/multibox.png" alt="multibox" /></p>

<h5 id="entendendo-o-c√≥digo-da-aplica√ß√£o">Entendendo o c√≥digo da aplica√ß√£o</h5>
<p></p>

<p>A aplica√ß√£o ir√° iniciar a webcam e ent√£o iniciar a captura das imagens em v√≠deo. Cada frame do v√≠deo √© processado como uma imagem, que recebe algumas tarefas de pr√©-processamento. Uma vez que a imagem tenha sido processada, ela √© entregue ao modelo de aprendizagem de m√°quina fornecido pela API do TensorFlow, que ent√£o classifica a imagem e mostra o score, que √© o percentual de certeza sobre a classifica√ß√£o.</p>

<p>Voc√™ pode baixar/clonar o c√≥digo da aplica√ß√£o <a href="https://github.com/eqdrs/object-detection-app">clicando aqui</a>. Abaixo, a implementa√ß√£o do <code class="highlighter-rouge">object_detection_app.py</code> com alguns coment√°rios.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
</pre></td><td class="code"><pre><span class="c1"># object_detection_app.py
</span>
<span class="c1"># Imports
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">math</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="n">slim</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">contrib</span><span class="o">.</span><span class="n">slim</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.image</span> <span class="k">as</span> <span class="n">mpimg</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">'../'</span><span class="p">)</span>

<span class="kn">from</span> <span class="nn">nets</span> <span class="kn">import</span> <span class="n">ssd_vgg_300</span><span class="p">,</span> <span class="n">ssd_common</span><span class="p">,</span> <span class="n">np_methods</span>
<span class="kn">from</span> <span class="nn">preprocessing</span> <span class="kn">import</span> <span class="n">ssd_vgg_preprocessing</span>
<span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">visualization</span>

<span class="c1"># Sess√£o TensorFlow: aumenta a mem√≥ria quando necess√°rio. 
</span><span class="n">gpu_options</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">GPUOptions</span><span class="p">(</span><span class="n">allow_growth</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">config</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">ConfigProto</span><span class="p">(</span><span class="n">log_device_placement</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">gpu_options</span><span class="o">=</span><span class="n">gpu_options</span><span class="p">)</span>
<span class="n">isess</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">InteractiveSession</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>

<span class="c1"># Placeholders de Input
</span><span class="n">net_shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
<span class="n">data_format</span> <span class="o">=</span> <span class="s">'NHWC'</span>
<span class="n">img_input</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">placeholder</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">uint8</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>

<span class="c1"># Pr√©-processamento: resize para. shape do SSD
</span><span class="n">image_pre</span><span class="p">,</span> <span class="n">labels_pre</span><span class="p">,</span> <span class="n">bboxes_pre</span><span class="p">,</span> <span class="n">bbox_img</span> <span class="o">=</span> <span class="n">ssd_vgg_preprocessing</span><span class="o">.</span><span class="n">preprocess_for_eval</span><span class="p">(</span>
    <span class="n">img_input</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">net_shape</span><span class="p">,</span> <span class="n">data_format</span><span class="p">,</span> <span class="n">resize</span><span class="o">=</span><span class="n">ssd_vgg_preprocessing</span><span class="o">.</span><span class="n">Resize</span><span class="o">.</span><span class="n">WARP_RESIZE</span><span class="p">)</span>
<span class="n">image_4d</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">expand_dims</span><span class="p">(</span><span class="n">image_pre</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

<span class="c1"># Define o modelo SSD
</span><span class="n">reuse</span> <span class="o">=</span> <span class="bp">True</span> <span class="k">if</span> <span class="s">'ssd_net'</span> <span class="ow">in</span> <span class="nb">locals</span><span class="p">()</span> <span class="k">else</span> <span class="bp">None</span>
<span class="n">ssd_net</span> <span class="o">=</span> <span class="n">ssd_vgg_300</span><span class="o">.</span><span class="n">SSDNet</span><span class="p">()</span>
<span class="k">with</span> <span class="n">slim</span><span class="o">.</span><span class="n">arg_scope</span><span class="p">(</span><span class="n">ssd_net</span><span class="o">.</span><span class="n">arg_scope</span><span class="p">(</span><span class="n">data_format</span><span class="o">=</span><span class="n">data_format</span><span class="p">)):</span>
    <span class="n">predictions</span><span class="p">,</span> <span class="n">localisations</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">ssd_net</span><span class="o">.</span><span class="n">net</span><span class="p">(</span><span class="n">image_4d</span><span class="p">,</span> <span class="n">is_training</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">reuse</span><span class="o">=</span><span class="n">reuse</span><span class="p">)</span>

<span class="c1"># Restaura o modelo SSD
</span><span class="n">ckpt_filename</span> <span class="o">=</span> <span class="s">'checkpoints/ssd_300_vgg.ckpt'</span>
<span class="n">isess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">global_variables_initializer</span><span class="p">())</span>
<span class="n">saver</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">train</span><span class="o">.</span><span class="n">Saver</span><span class="p">()</span>
<span class="n">saver</span><span class="o">.</span><span class="n">restore</span><span class="p">(</span><span class="n">isess</span><span class="p">,</span> <span class="n">ckpt_filename</span><span class="p">)</span>

<span class="c1"># SSD default anchor boxes
</span><span class="n">ssd_anchors</span> <span class="o">=</span> <span class="n">ssd_net</span><span class="o">.</span><span class="n">anchors</span><span class="p">(</span><span class="n">net_shape</span><span class="p">)</span>

<span class="c1"># Rotina de processamento das imagens
</span><span class="k">def</span> <span class="nf">process_image</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">select_threshold</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">nms_threshold</span><span class="o">=</span><span class="mf">.45</span><span class="p">,</span> <span class="n">net_shape</span><span class="o">=</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)):</span>

    <span class="c1"># Executa a rede SSD.
</span>    <span class="n">rimg</span><span class="p">,</span> <span class="n">rpredictions</span><span class="p">,</span> <span class="n">rlocalisations</span><span class="p">,</span> <span class="n">rbbox_img</span> <span class="o">=</span> <span class="n">isess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="n">image_4d</span><span class="p">,</span> <span class="n">predictions</span><span class="p">,</span> <span class="n">localisations</span><span class="p">,</span> <span class="n">bbox_img</span><span class="p">],</span>
                                                              <span class="n">feed_dict</span><span class="o">=</span><span class="p">{</span><span class="n">img_input</span><span class="p">:</span> <span class="n">img</span><span class="p">})</span>
    
    <span class="c1"># Obt√©m classes e bboxes (bounding boxes) das sa√≠das da rede
</span>    <span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span> <span class="o">=</span> <span class="n">np_methods</span><span class="o">.</span><span class="n">ssd_bboxes_select</span><span class="p">(</span>
            <span class="n">rpredictions</span><span class="p">,</span> <span class="n">rlocalisations</span><span class="p">,</span> <span class="n">ssd_anchors</span><span class="p">,</span>
            <span class="n">select_threshold</span><span class="o">=</span><span class="n">select_threshold</span><span class="p">,</span> <span class="n">img_shape</span><span class="o">=</span><span class="n">net_shape</span><span class="p">,</span> <span class="n">num_classes</span><span class="o">=</span><span class="mi">21</span><span class="p">,</span> <span class="n">decode</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    
    <span class="n">rbboxes</span> <span class="o">=</span> <span class="n">np_methods</span><span class="o">.</span><span class="n">bboxes_clip</span><span class="p">(</span><span class="n">rbbox_img</span><span class="p">,</span> <span class="n">rbboxes</span><span class="p">)</span>
    <span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span> <span class="o">=</span> <span class="n">np_methods</span><span class="o">.</span><span class="n">bboxes_sort</span><span class="p">(</span><span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span><span class="p">,</span> <span class="n">top_k</span><span class="o">=</span><span class="mi">400</span><span class="p">)</span>
    <span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span> <span class="o">=</span> <span class="n">np_methods</span><span class="o">.</span><span class="n">bboxes_nms</span><span class="p">(</span><span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span><span class="p">,</span> <span class="n">nms_threshold</span><span class="o">=</span><span class="n">nms_threshold</span><span class="p">)</span>
    
    <span class="c1"># Redimensiona bboxes para a forma original da imagem. 
</span>    <span class="n">rbboxes</span> <span class="o">=</span> <span class="n">np_methods</span><span class="o">.</span><span class="n">bboxes_resize</span><span class="p">(</span><span class="n">rbbox_img</span><span class="p">,</span> <span class="n">rbboxes</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span>


<span class="c1"># Testa nas imagens de teste
</span><span class="n">path</span> <span class="o">=</span> <span class="s">'demo/'</span>
<span class="n">image_names</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">path</span><span class="p">))</span>

<span class="c1"># Altera o valor de 1 a 7 para testar diferentes imagens
</span><span class="n">img</span> <span class="o">=</span> <span class="n">mpimg</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">path</span> <span class="o">+</span> <span class="n">image_names</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">])</span>
<span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span> <span class="o">=</span>  <span class="n">process_image</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>

<span class="c1"># Visualiza a imagem com os objetos detectados
</span><span class="n">visualization</span><span class="o">.</span><span class="n">plt_bboxes</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">rclasses</span><span class="p">,</span> <span class="n">rscores</span><span class="p">,</span> <span class="n">rbboxes</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h5 id="executando-a-aplica√ß√£o">Executando a aplica√ß√£o</h5>
<p></p>

<p>Os requisitos e instru√ß√µes de uso est√£o dispon√≠veis no arquivo <code class="highlighter-rouge">README.md</code> do projeto. Basicamente, ser√° necess√°rio ter o Anaconda instalado, com uma vers√£o do Python igual ou superior a <code class="highlighter-rouge">3.6.5</code>, al√©m do OpenCV e TensorFlow.</p>

<p>Abaixo, um v√≠deo demonstrando um pouco da aplica√ß√£o em funcionamento:</p>

<iframe width="420" height="315" src="https://youtu.be/u9znvuGpVfk" frameborder="0" allowfullscreen=""></iframe>

<p>Muito bacana, n√©?! Pretendo trazer para o blog mais posts relacionados a Vis√£o Computacional, dessa vez mostrando como criar nossos pr√≥prios modelos. √â uma das √°reas de IA que mais me chamam aten√ß√£o.</p>

<p>Espero que tenham gostado! At√© mais, pessoal! üòä</p>

:ET